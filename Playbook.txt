---
 - name: Play To run multiple tasks
   hosts: dbservers
   vars_prompt:
       name: data
       prompt: Enter value
   tasks:
     - name: Create a file
       command: touch /tmp/myfile.txt
       args:
          creates: /home/ec2
     - name: write the content
       copy:
        content: "{{ data }}"
        dest: /tmp/myfile.txt
     - name: Read the file
       command: cat /tmp/myfile.txt
       register: output
     - name: Print file content
       debug:
        msg: " {{ output.stdout }}"
        
        
---
 - name: Play for executing a script on agent node
   hosts: dbservers,webservers
   tasks:
     - name: copy test.sh file {{ inventory_hostname }}
       copy:
         src: /tmp/test.sh
         dest: /tmp/test.sh
     - name: Providing permission
       shell: chmod 777 /tmp/test.sh
     - name: Execute the script
       command: bash  /tmp/test.sh


---
 - name: run the script module
   hosts: webservers,dbservers
   vars:
     env: 'Production'
   tasks:
     - script:
          cmd: /tmp/test.sh "{{ env }}"
            #args:
            #removes: /the/removed/file.txt
     - script:
          cmd: /tmp/test.py
       args:
          executable: python3


---
 - hosts: dbservers
   tasks:
     - fetch:
         src: /tmp/myfile.txt
         dest: /tmp/myfile1.txt        
         
         
---
 - hosts: webservers
   tasks:
     - service:
          name: apache2
          state: started
---
 - name: play for dry run
   hosts: dbservers
   tasks:
        - name: Copying testing.txt file to webservers
          copy: src=/tmp/testing.txt dest=/tmp/test.txt
---
 - name: play for dbservers multiple tasks
   hosts: dbservers
   vars_prompt:
      name: data
      prompt: Enter the value
   tasks:
         # Task1
        - name: create a file
          command: touch /tmp/myfile.txt
          check_mode: no
        # Task2
        - name: Add content to the file
          copy:
              content: "{{ data }}"
              dest: /tmp/myfile.txt
          check_mode: yes
         # Task 3
        - name: Read the content
          command: cat /tmp/myfile.txt
          register: output
          # Task 4
        - name: Print the content
          debug:
             var: output.stdout
---
 - hosts: dbservers
   tasks:
     - user:
        name: john
        state: absent

---
 - hosts: dbservers,server1
   tasks:
        - name: Task0
          command: /bin/true
          ignore_unreachable: true
        - name: Task1
          command: date
        - name: Task2
          command: date1
          ignore_errors: True
        - name: Task3
          command: ls
---
 - hosts: dbservers
   tasks:
     - name: Fail task when the command error output prints FAILED
       ansible.builtin.command: /usr/bin/example-command -x -y -z
       register: command_result
       failed_when: "'FAILED' in command_result.stderr"
         
